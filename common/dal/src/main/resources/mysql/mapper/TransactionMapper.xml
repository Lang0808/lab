<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.luke.common.dal.mysql.mapper.TransactionMapper">
    <resultMap id="TransactionResultMap" type="org.luke.common.dal.model.Transaction">
        <id column="transaction_id" property="id" />
        <result column="status" property="status" />
        <result column="sender" property="sender" />
        <result column="receiver" property="receiver" />
        <result column="product_id" property="productId" />
        <result column="price" property="price" />
        <result column="quantity" property="quantity" />
        <result column="total" property="total" />
        <result column="gmt_create" property="gmtCreate" />
        <result column="gmt_modified" property="gmtModified" />
    </resultMap>

    <sql id="selectTransactionFields">
        select transaction_id, status, sender, receiver, product_id, price, quantity, total, gmt_create, gmt_modified
        from transactions
    </sql>

    <sql id="filterTransactions">
        where TRUE
        <if test="filter.id != null">
            and transaction_id = #{filter.id}
        </if>
        <if test="filter.status != null">
            and status = #{filter.status}
        </if>
        <if test="filter.sender != null">
            and sender = #{filter.sender}
        </if>
        <if test="filter.receiver != null">
            and receiver = #{filter.receiver}
        </if>
        <if test="filter.productId != null">
            and product_id = #{filter.productId}
        </if>
    </sql>

    <select id="selectTransaction" resultMap="TransactionResultMap">
        <include refid="selectTransactionFields" />
        where id = #{transId}
    </select>

    <insert id="insertTransaction">
        insert into transactions (transaction_id, status, sender, receiver, product_id, price, quantity, total)
        values
        (#{id}, #{status}, #{sender}, #{receiver}, #{productId}, #{price}, #{quantity}, #{total})
    </insert>

    <select id="countTransaction">
        select count(*)
        from transactions
    </select>

    <select id="selectTransactions" resultMap="TransactionResultMap">
        <include refid="selectTransactionFields" />
        <include refid="filterTransactions" />
        order by gmt_create desc
        limit #{paging.limit} offset #{paging.offset}
    </select>
</mapper>