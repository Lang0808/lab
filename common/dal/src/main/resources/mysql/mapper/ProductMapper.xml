<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.luke.common.dal.mysql.mapper.ProductMapper">

    <resultMap id="ProductResultMap" type="org.luke.common.dal.model.Product">
        <id column="product_id" property="id"/>
        <result column="status" property="status"/>
        <result column="merchant" property="merchant"/>
        <result column="price" property="price"/>
        <result column="creator" property="creator"/>
        <result column="name" property="name"/>
        <result column="description" property="description"/>
        <result column="gmt_create" property="gmtCreate"/>
        <result column="gmt_modified" property="gmtModified"/>
    </resultMap>

    <sql id="selectProductFields">
        select product_id, status, merchant, price, creator, name, description, gmt_create, gmt_modified
        from products
    </sql>

    <sql id="filterProducts">
        where TRUE
        <if test="filter.id != null">
            and product_id = #{filter.id}
        </if>
        <if test="filter.status != null">
            and status = #{filter.status}
        </if>
        <if test="filter.merchant != null">
            and merchant = #{filter.merchant}
        </if>
        <if test="filter.name != null">
            and name like concat('%', #{filter.name}, '%')
        </if>
    </sql>

    <select id="selectProduct" resultMap="ProductResultMap">
        <include refid="selectProductFields"/>
        where product_id = #{prodId}
    </select>

    <insert id="insertProduct">
        insert into products (product_id, status, merchant, price, creator, name, description)
        values (#{id}, #{status}, #{merchant}, #{price}, #{creator}, #{name}, #{description})
    </insert>

    <update id="updateProduct">
        update products
        set status = #{status}, merchant = #{merchant}, price = #{price}, creator = #{creator}, name = #{name}, description = #{description}
        where product_id = #{id}
    </update>

    <select id="selectProducts" resultMap="ProductResultMap">
        <include refid="selectProductFields"/>
        <include refid="filterProducts"/>
        order by gmt_create desc
        limit #{paging.limit} offset #{paging.offset}
    </select>
</mapper>
